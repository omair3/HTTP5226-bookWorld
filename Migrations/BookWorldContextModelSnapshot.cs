// <auto-generated />
using BookWorld.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookWorld.Migrations
{
    [DbContext(typeof(BookWorldContext))]
    partial class BookWorldContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookWorld.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "United Kingdom",
                            Name = "Jane Austen"
                        },
                        new
                        {
                            Id = 2,
                            Country = "United Kingdom",
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 3,
                            Country = "United Kingdom",
                            Name = "Agatha Christie"
                        },
                        new
                        {
                            Id = 4,
                            Country = "United Kingdom",
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 5,
                            Country = "United States",
                            Name = "Ernest Hemingway"
                        },
                        new
                        {
                            Id = 6,
                            Country = "United States",
                            Name = "Stephen King"
                        },
                        new
                        {
                            Id = 7,
                            Country = "United States",
                            Name = "Toni Morrison"
                        },
                        new
                        {
                            Id = 8,
                            Country = "United States",
                            Name = "Mark Twain"
                        },
                        new
                        {
                            Id = 9,
                            Country = "United Kingdom",
                            Name = "Virginia Woolf"
                        },
                        new
                        {
                            Id = 10,
                            Country = "United States",
                            Name = "Isaac Asimov"
                        },
                        new
                        {
                            Id = 11,
                            Country = "United Kingdom",
                            Name = "Mary Shelley"
                        },
                        new
                        {
                            Id = 12,
                            Country = "United Kingdom",
                            Name = "Charles Dickens"
                        });
                });

            modelBuilder.Entity("BookWorld.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 7,
                            Title = "Beloved"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 8,
                            Title = "The Adventures of Tom Sawyer"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 9,
                            Title = "Mrs. Dalloway"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            Title = "Foundation"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 11,
                            Title = "Frankenstein"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 12,
                            Title = "Great Expectations"
                        });
                });

            modelBuilder.Entity("BookWorld.Models.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenres");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            BookId = 3,
                            GenreId = 3
                        },
                        new
                        {
                            BookId = 4,
                            GenreId = 4
                        },
                        new
                        {
                            BookId = 5,
                            GenreId = 7
                        },
                        new
                        {
                            BookId = 6,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 7,
                            GenreId = 8
                        },
                        new
                        {
                            BookId = 8,
                            GenreId = 10
                        },
                        new
                        {
                            BookId = 9,
                            GenreId = 1
                        },
                        new
                        {
                            BookId = 10,
                            GenreId = 5
                        },
                        new
                        {
                            BookId = 11,
                            GenreId = 11
                        },
                        new
                        {
                            BookId = 12,
                            GenreId = 1
                        });
                });

            modelBuilder.Entity("BookWorld.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Historical"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Self-Help"
                        });
                });

            modelBuilder.Entity("BookWorld.Models.Book", b =>
                {
                    b.HasOne("BookWorld.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookWorld.Models.BookGenre", b =>
                {
                    b.HasOne("BookWorld.Models.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookWorld.Models.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("BookWorld.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookWorld.Models.Book", b =>
                {
                    b.Navigation("BookGenres");
                });

            modelBuilder.Entity("BookWorld.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
